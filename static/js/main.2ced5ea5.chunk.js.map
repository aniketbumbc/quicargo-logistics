{"version":3,"sources":["components/delivery/Delivery.tsx","constant/constant.ts","components/sidenavbar/SideNavBar.tsx","components/header/Header.tsx","components/delivery/Map/map.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Delivery","useForm","register","errors","formState","className","htmlFor","required","style","marginLeft","value","addressPickup","placeholder","maxLength","pickup","type","addressDelivery","delivery","name","id","defaultChecked","min","defaultValue","pattern","volumeCount","pickupDate","max","deliveryDate","LAT_N_LON_MAP","lat","lng","SideNavBar","src","alt","href","Header","Map","bootstrapURLKeys","key","process","defaultCenter","defaultZoom","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ced5ea5.chunk.js","sourcesContent":["import { useForm } from 'react-hook-form';\nimport './delivery.scss';\n\nconst Delivery = () => {\n  const {\n    register,\n    formState: { errors },\n  } = useForm();\n\n  return (\n    <div>\n      <div className='delivery-container'>\n        <div className='route-container'>\n          <form data-testid='form'>\n            {/*  Route Section Start */}\n            <div className='inner-container'>\n              <p className='route-container-title'> Route </p>\n              <label htmlFor='pickup' className='route-container-select-lable'>\n                Pickup\n              </label>\n              <select\n                {...register('pickup', { required: true })}\n                className='route-container-select'\n                style={{ marginLeft: 15 }}\n                data-testid='pickup-dropdown'\n              >\n                <option data-testid='select-option' value=''>\n                  Please select country\n                </option>\n                <option data-testid='netherland-option' value='netherland'>\n                  Netherland\n                </option>\n                <option data-testid='germany-option' value='germany'>\n                  Germany\n                </option>\n              </select>\n              <input\n                className={\n                  !errors.addressPickup\n                    ? 'route-container-address'\n                    : 'route-container-address error-input'\n                }\n                placeholder='Address Pickup'\n                {...register('addressPickup', {\n                  required: true,\n                  maxLength: 20,\n                })}\n              />\n\n              {errors.pickup && (\n                <p className='show-error'> please select pickup location</p>\n              )}\n\n              {errors.addressPickup &&\n                errors.addressPickup.type === 'maxLength' && (\n                  <p className='show-maxLength-error'>\n                    please Enter Max 20 characters\n                  </p>\n                )}\n\n              <label\n                htmlFor='delivery'\n                className='route-container-select-lable'\n              >\n                Delivery\n              </label>\n              <select\n                {...register('delivery', { required: true })}\n                className='route-container-select'\n                style={{ marginLeft: 8 }}\n                data-testid='delivery-dropdown'\n              >\n                <option value=''>please select country</option>\n                <option value='netherland'>Netherland</option>\n                <option value='germany' data-testid='germany-delivery-option'>\n                  Germany\n                </option>\n              </select>\n\n              <input\n                className={\n                  !errors.addressDelivery\n                    ? 'route-container-address'\n                    : 'route-container-address error-input'\n                }\n                placeholder='Address Delivery'\n                {...register('addressDelivery', {\n                  required: true,\n                  maxLength: 20,\n                })}\n              />\n\n              {errors.delivery && (\n                <p className='show-error'>please select delivery location</p>\n              )}\n\n              {errors.addressDelivery &&\n                errors.addressDelivery.type === 'maxLength' && (\n                  <p className='show-maxLength-error'>\n                    Please Enter Max 20 characters\n                  </p>\n                )}\n            </div>\n            {/*  Route Section End */}\n\n            {/* freight section start  */}\n\n            <div className='freight-container'>\n              <p className='freight-container-title'> Freight Details </p>\n              <div className='freight-container-goods'>\n                <p> Type of goods</p>\n                <div className='freight-container-goods-tabs'>\n                  <input\n                    name='tabs'\n                    type='radio'\n                    id='tab-1'\n                    value='paper'\n                    defaultChecked\n                    className='freight-container-goods-tabs-btn'\n                  />\n                  <label htmlFor='tab-1' className='tabs-label'>\n                    Paper\n                  </label>\n                  <input\n                    name='tabs'\n                    type='radio'\n                    id='tab-2'\n                    value='Plastic'\n                    className='freight-container-goods-tabs-btn'\n                  />\n                  <label htmlFor='tab-2' className='tabs-label'>\n                    Plastic\n                  </label>\n                  <input\n                    name='tabs'\n                    type='radio'\n                    id='tab-3'\n                    value='Textile'\n                    className='freight-container-goods-tabs-btn'\n                  />\n                  <label htmlFor='tab-3' className='tabs-label'>\n                    Textile\n                  </label>\n                  <input\n                    name='tabs'\n                    type='radio'\n                    value='Other'\n                    id='tab-4'\n                    className='freight-container-goods-tabs-btn'\n                  />\n                  <label htmlFor='tab-4' className='tabs-label'>\n                    Other\n                  </label>\n                </div>\n              </div>\n\n              <div className='freight-container-volume'>\n                <p> Volume </p>\n                <select\n                  {...register('freightType')}\n                  className='freight-container-volume-type'\n                  data-testid='volume-dropdown'\n                >\n                  <option value='pallet'>Pallet</option>\n                  <option value='container' data-testid='container'>\n                    Container\n                  </option>\n                  <option value='boxes'>Boxes</option>\n                </select>\n                <label\n                  htmlFor='volumeCount'\n                  className='freight-container-volume-label'\n                  id='count'\n                >\n                  Count\n                </label>\n                <input\n                  aria-labelledby='count'\n                  type='number'\n                  min='0'\n                  defaultValue='0'\n                  pattern='^-?[0-9]\\d*\\.?\\d*$'\n                  className={\n                    !errors.volumeCount\n                      ? 'freight-container-volume-number'\n                      : 'freight-container-volume freight-container-volume-error'\n                  }\n                  {...register('volumeCount', {\n                    required: true,\n                  })}\n                />\n                <div className='dimension-field'>\n                  <label htmlFor='length' id='length'>\n                    Length(cm)\n                  </label>\n                  <input\n                    aria-labelledby='length'\n                    type='number'\n                    min='0'\n                    pattern='^-?[0-9]\\d*\\.?\\d*$'\n                    className='freight-container-volume-dimension'\n                    {...register('length')}\n                  />\n                  X\n                </div>\n                <div className='dimension-field'>\n                  <label htmlFor='width' id='width'>\n                    Width(cm)\n                  </label>\n                  <input\n                    aria-labelledby='width'\n                    type='number'\n                    min='0'\n                    pattern='^-?[0-9]\\d*\\.?\\d*$'\n                    className='freight-container-volume-dimension'\n                    {...register('width')}\n                  />\n                  X\n                </div>\n                <div className='dimension-field'>\n                  <label htmlFor='height' id='height'>\n                    Height(cm)\n                  </label>\n                  <input\n                    aria-labelledby='height'\n                    type='number'\n                    min='0'\n                    pattern='^-?[0-9]\\d*\\.?\\d*$'\n                    className='freight-container-volume-dimension'\n                    {...register('height')}\n                  />\n                </div>\n              </div>\n              <div className='weight-container'>\n                <label htmlFor='weight' className='weight-container-label'>\n                  Weight\n                </label>\n                <input\n                  className='weight-container-input'\n                  placeholder='kg'\n                  type='number'\n                  min='0'\n                  pattern='^-?[0-9]\\d*\\.?\\d*$'\n                  {...register('weight')}\n                />\n              </div>\n            </div>\n            {/* freight section end  */}\n\n            {/* Date and Time section start */}\n            <div className='date-container'>\n              <p className='freight-container-title'> Date & Time </p>\n              <p className='date-container-pickup'>\n                <label htmlFor='pickupDate' className='date-container-label'>\n                  Pickup Date\n                </label>\n                <input\n                  data-testid='pickup-date-picker'\n                  className={\n                    !errors.pickupDate\n                      ? 'date-container-input'\n                      : 'date-container-input date-container-error'\n                  }\n                  type='date'\n                  id='start'\n                  min='2010-01-01'\n                  max='3010-12-31'\n                  {...register('pickupDate', {\n                    required: true,\n                  })}\n                />\n                <label\n                  htmlFor='pickupTime'\n                  className='date-container-label'\n                  id='pickupTime'\n                >\n                  Time\n                </label>\n                <input\n                  aria-labelledby='pickupTime'\n                  className='date-container-input'\n                  type='time'\n                  {...register('pickupTime')}\n                ></input>\n              </p>\n              <p className='date-container-delivery'>\n                <label htmlFor='deliveryDate' className='date-container-label'>\n                  Delivery Date\n                </label>\n                <input\n                  data-testid='delivery-date-picker'\n                  className={\n                    !errors.deliveryDate\n                      ? 'date-container-input'\n                      : 'date-container-input date-container-error'\n                  }\n                  type='date'\n                  id='start'\n                  min='2010-01-01'\n                  max='3010-12-31'\n                  {...register('deliveryDate', {\n                    required: true,\n                  })}\n                ></input>\n                <label\n                  htmlFor='deliveryTime'\n                  className='date-container-label'\n                  aria-labelledby='deliveryTime'\n                >\n                  Time\n                </label>\n                <input\n                  data-testid='delivery-time-picker'\n                  aria-labelledby='deliveryTime'\n                  className='date-container-input'\n                  type='time'\n                  {...register('deliveryTime')}\n                />\n              </p>\n            </div>\n            {/* Date and Time section end */}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Delivery;\n","export const IMAGE_LOGO =\n  'https://quicargo.com/wp-content/uploads/2020/11/Quicargo-official-logo-white.png';\n\nexport const LAT_N_LON_MAP = { lat: 52.3676, lng: 4.9041 };\nexport const ZOOM_LEVEL = 10;\n","import Delivery from '../delivery/Delivery';\nimport { IMAGE_LOGO } from '../../constant/constant';\nimport './sidenavbar.scss';\n\nconst SideNavBar = () => {\n  return (\n    <>\n      <section className='navbar'>\n        <aside className='sidebar'>\n          <header>\n            <img src={IMAGE_LOGO} alt='Quicargo' className='sidebar-img' />\n          </header>\n\n          <nav className='sidebar-nav'>\n            <ul>\n              <li>\n                <a href='#/'>\n                  <span>\n                    <i className='fas fa-plus'></i> New Delivery\n                  </span>\n                </a>\n              </li>\n              <li>\n                <a href='#/'>\n                  <span>\n                    <i className='fas fa-shipping-fast'></i> My Deliveries\n                    <span className='badge'>4</span>\n                  </span>\n                </a>\n              </li>\n              <li>\n                <a href='#/'>\n                  <span>\n                    <i className='fas fa-history'></i> History\n                    <span className='badge'>2</span>\n                  </span>\n                </a>\n              </li>\n            </ul>\n          </nav>\n        </aside>\n        <Delivery />\n      </section>\n    </>\n  );\n};\n\nexport default SideNavBar;\n","import './header.scss';\n\nconst Header = () => {\n  return (\n    <div className='container'>\n      <header className='navbar-fixed-top'>\n        <nav>\n          <ul>\n            <li className='user-name'>John</li>\n            <li>\n              <i className='fas fa-user-circle icon'></i>\n            </li>\n          </ul>\n        </nav>\n      </header>\n    </div>\n  );\n};\n\nexport default Header;\n","import GoogleMapReact from 'google-map-react';\nimport { LAT_N_LON_MAP, ZOOM_LEVEL } from '../../../constant/constant';\nimport './map.scss';\n\nconst Map = () => {\n  const MAP_KEY = process.env.REACT_APP_MAP_KEY!;\n  return (\n    <div className='map-container'>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: MAP_KEY }}\n        defaultCenter={LAT_N_LON_MAP}\n        defaultZoom={ZOOM_LEVEL}\n      ></GoogleMapReact>\n    </div>\n  );\n};\n\nexport default Map;\n","import SideNavBar from './components/sidenavbar/SideNavBar';\nimport Header from './components/header/Header';\nimport Map from './components/delivery/Map/map';\nimport './App.scss';\n\nconst App = () => {\n  return (\n    <>\n      <Header />\n      <div className='main-container'>\n        <SideNavBar />\n        <Map />\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}